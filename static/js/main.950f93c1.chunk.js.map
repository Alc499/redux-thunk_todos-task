{"version":3,"sources":["api.js","store.js","CurrentUser.js","TodoList.js","App.js","index.js"],"names":["API_URL","getTodos","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","todos","getTodoByUserId","wrap","_context","prev","next","wait","fetch","concat","sent","json","userId","find","todo","abrupt","filter","stop","apply","this","arguments","delay","Promise","resolve","setTimeout","getTodosFromState","state","getIsLoading","isLoading","getHasError","hasError","store","createStore","action","type","_objectSpread","currentUser","user","applyMiddleware","thunk","CurrentUser","react_default","createElement","className","id","name","email","phone","TodoList","showUser","map","key","htmlFor","checked","completed","readOnly","title","onClick","username","address","street","suite","city","zipcode","geo","lat","lng","website","company","catchPhrase","bs","App","_this$props","props","loadTodos","clearTodos","length","src_TodoList","src_CurrentUser","React","Component","connect","dispatch","then","setTodos","catch","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.950f93c1.chunk.js","sourcesContent":["const API_URL = 'https://jsonplaceholder.typicode.com';\r\n\r\nexport const getTodos = async() => {\r\n  await wait(2000);\r\n  const response = await fetch(`${API_URL}/todos`);\r\n  const todos = await response.json();\r\n\r\n  const getTodoByUserId = userId => todos.find(todo => todo.userId === userId)\r\n\r\n  return todos.filter(todo => todo === getTodoByUserId(todo.userId));\r\n};\r\n\r\nexport const getUser = async(userId) => {\r\n  await wait(2000);\r\n  const response = await fetch(`${API_URL}/users/${userId}`);\r\n\r\n  return response.json();\r\n};\r\n\r\nconst wait = delay => new Promise((resolve) => {\r\n  setTimeout(resolve, delay);\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk  from 'redux-thunk';\n\n\nimport { getTodos, getUser } from './api';\n\nconst START_LOADING = 'startLoading';\nconst SET_TODOS = 'setTodos';\nconst SET_USER = 'setUser';\nconst HANDLE_ERROR = 'handleError';\nconst CLEAR_TODOS = 'clearTodos';\n\nexport const startLoading = () => ({ type: START_LOADING });\nexport const handleError = () => ({ type: HANDLE_ERROR });\n\nexport const setTodos = todos => ({ type: SET_TODOS, todos });\nexport const setUser = user => ({ type: SET_USER, user });\nexport const clearTodos = () => ({type: CLEAR_TODOS });\n\nexport const loadTodos = () => {\n  return (dispatch) => {\n    dispatch(startLoading());\n\n    return getTodos()\n      .then(todos => dispatch(setTodos(todos)))\n      .catch(() => dispatch(handleError()));\n  };\n}\n\nexport const getTodosFromState = state => state.todos;\nexport const getCurrentUser = state => state.currentUser;\nexport const getIsLoading = state => state.isLoading;\nexport const getHasError = state => state.hasError;\n\nconst initialState = {\n  todos: [],\n  currentUser: {},\n  isLoading: false,\n  hasError: false,\n};\n\nconst reducer = (state, action) => {\n\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n      };\n\n    case SET_TODOS:\n      return {\n        ...state,\n        todos: action.todos,\n        isLoading: false\n      }\n\n    case SET_USER:\n        return {\n          ...state,\n          currentUser: action.user,\n          isLoading: false\n        }\n\n    case HANDLE_ERROR:\n        return {\n          ...state,\n          hasError: true,\n          isLoading: false\n        }\n\n    case CLEAR_TODOS:\n      return {\n        ...state,\n        todos: [],\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  reducer,\n  initialState,\n  applyMiddleware(thunk),\n);\n\nexport default store;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CurrentUser = ({ user }) => (\r\n  <div className=\"CurrentUser\">\r\n    <strong>Selected user:</strong>\r\n    <ul>\r\n      <li>{`#${user.id}`}</li>\r\n      <li>{user.name}</li>\r\n      <li>{user.email}</li>\r\n      <li>{user.phone}</li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default CurrentUser;\r\n\r\nCurrentUser.propTypes = {\r\n  user: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    email: PropTypes.string.isRequired,\r\n    phone: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TodoList = ({ todos, showUser }) => (\r\n  <div className=\"TodoList\">\r\n    <strong>Todos:</strong>\r\n\r\n    <ul className=\"TodoList__list\">\r\n      {todos.map(todo => (\r\n        <li key={todo.id} className=\"TodoList__item\">\r\n          <label htmlFor={`todo-${todo.id}`}>\r\n            <input\r\n              type=\"checkbox\"\r\n              id={`todo-${todo.id}`}\r\n              checked={todo.completed}\r\n              readOnly\r\n            />\r\n            {todo.title}\r\n          </label>\r\n\r\n          <button type=\"button\" onClick={() => showUser(todo.userId)}>\r\n            User\r\n            {todo.userId}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default TodoList;\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  showUser: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  loadTodos,\n  clearTodos,\n  getTodosFromState,\n  getCurrentUser,\n  getIsLoading,\n  getHasError,\n} from './store';\n\nimport CurrentUser from './CurrentUser';\nimport TodoList from './TodoList';\n\n// getTodos()\n//   .then(todos => {\n//     console.log(todos);\n//   });\n\n// const todos = [\n//   {\n//     userId: 1,\n//     id: 1,\n//     title: 'delectus aut autem',\n//     completed: true,\n//   },\n//   {\n//     userId: 2,\n//     id: 2,\n//     title: 'quis ut nam facilis et officia qui',\n//     completed: false,\n//   },\n//   {\n//     userId: 1,\n//     id: 3,\n//     title: 'fugiat veniam minus',\n//     completed: false,\n//   },\n//   {\n//     userId: 1,\n//     id: 4,\n//     title: 'et porro tempora',\n//     completed: true,\n//   },\n//   {\n//     userId: 4,\n//     id: 5,\n//     title: 'laboriosam mollitia et enim quasi adipisci quia provident illum',\n//     completed: false,\n//   },\n//   {\n//     userId: 1,\n//     id: 6,\n//     title: 'qui ullam ratione quibusdam voluptatem quia omnis',\n//     completed: false,\n//   },\n// ];\nconst currentUser = {\n  id: 1,\n  name: 'Leanne Graham',\n  username: 'Bret',\n  email: 'Sincere@april.biz',\n  address: {\n    street: 'Kulas Light',\n    suite: 'Apt. 556',\n    city: 'Gwenborough',\n    zipcode: '92998-3874',\n    geo: {\n      lat: '-37.3159',\n      lng: '81.1496',\n    },\n  },\n  phone: '1-770-736-8031 x56442',\n  website: 'hildegard.org',\n  company: {\n    name: 'Romaguera-Crona',\n    catchPhrase: 'Multi-layered client-server neural-net',\n    bs: 'harness real-time e-markets',\n  },\n};\n\nclass App extends React.Component {\n  render() {\n    const {\n      todos,\n      loadTodos,\n      clearTodos,\n      isLoading,\n      hasError,\n    } = this.props;\n\n    if (isLoading) {\n      return (\n        <main className=\"App\">\n          <section>\n            <p className=\"info\">Loading...</p>\n            <p className=\"info\">Loading...</p>\n          </section>\n\n          <section>\n            <div className=\"content\">\n              <div className=\"loader\" />\n            </div>\n            <div className=\"content\">\n              <div className=\"loader\" />\n            </div>\n          </section>\n        </main>\n      )\n    }\n\n    if (hasError) {\n      return (\n        <main className=\"App\">\n          <section>\n            <p className=\"info\">\n              Failed loading todos\n              <button type=\"button\">Reload</button>\n            </p>\n\n            <p className=\"info\">\n              Failed loading user\n              <button type=\"button\">Reload</button>\n            </p>\n          </section>\n\n          <section>\n            <div className=\"content\">\n              <p>-</p>\n            </div>\n\n            <div className=\"content\">\n              <p>-</p>\n            </div>\n          </section>\n        </main>\n      )\n    }\n\n    if (todos.length < 1) {\n      return (\n        <main className=\"App\">\n          <section>\n            <p className=\"info\">\n              Todos are not loaded yet\n              <button\n                type=\"button\"\n                onClick={loadTodos}\n              >Load</button>\n            </p>\n\n            <p className=\"info\">User is not selected</p>\n          </section>\n\n          <section>\n            <div className=\"content\">\n              <p>-</p>\n            </div>\n\n            <div className=\"content\">\n              <p>-</p>\n            </div>\n          </section>\n        </main>\n      )\n    }\n\n    return (\n      <main className=\"App\">\n        <section>\n          <p className=\"info\">\n            6 todos are loaded\n            <button\n              type=\"button\"\n              onClick={clearTodos}\n            >\n              Clear\n            </button>\n          </p>\n\n          <p className=\"info\">\n            User #1 is loaded\n            <button type=\"button\">Clear</button>\n          </p>\n        </section>\n\n        <section>\n          <p className=\"info\">\n            1 todo is loaded\n            <button type=\"button\">Clear</button>\n          </p>\n\n          <p className=\"info\">User #999 does not exist</p>\n        </section>\n\n        <section>\n          <div className=\"content\">\n            <TodoList todos={todos} />\n          </div>\n          <div className=\"content\">\n            <CurrentUser user={currentUser} />\n          </div>\n        </section>\n      </main>\n    )\n  }\n};\n\nconst getData = state => ({\n  todos: getTodosFromState(state),\n  isLoading: getIsLoading(state),\n  hasError: getHasError(state),\n});\n\nconst getMethods = dispatch => ({\n  loadTodos: () => dispatch(loadTodos()),\n  clearTodos: () => dispatch(clearTodos()),\n});\n\nexport default connect(getData, getMethods)(App);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './styles.css';\r\n\r\nimport App from './App';\r\nimport store from './store';\r\n\r\nconst Root = () => (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n"],"sourceRoot":""}