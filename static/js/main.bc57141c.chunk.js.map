{"version":3,"sources":["api.js","store.js","TodoList.js","TodosTable.js","CurrentUser.js","UserTable.js","App.js","index.js"],"names":["API_URL","getTodos","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","todos","getTodoByUserId","wrap","_context","prev","next","wait","fetch","concat","sent","json","userId","find","todo","abrupt","filter","stop","apply","this","arguments","getUser","_ref2","_callee2","_context2","_x","delay","Promise","resolve","setTimeout","loadTodos","dispatch","type","then","setTodos","catch","showUser","selectUser","user","setUser","getTodosFromState","state","getTodosAreLoading","todosAreLoading","getTodosHaveError","todosHaveError","getCurrentUser","currentUser","getSelectedUserId","selectedUserId","getUserIsLoading","userIsLoading","getUserHasError","userHasError","store","createStore","action","_objectSpread","applyMiddleware","thunk","connect","loadUser","react_default","createElement","className","map","key","id","htmlFor","checked","completed","readOnly","title","onClick","TodosTable","_this","props","_this$props","clear","hasError","length","src_TodoList","React","Component","CurrentUser","name","email","phone","UserTable","_this2","keys","src_CurrentUser","App","src_TodosTable","src_UserTable","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bc57141c.chunk.js","sourcesContent":["const API_URL = 'https://jsonplaceholder.typicode.com';\n\nexport const getTodos = async() => {\n  await wait(2000);\n  const response = await fetch(`${API_URL}/todos`);\n  const todos = await response.json();\n\n  const getTodoByUserId = userId => todos.find(todo => todo.userId === userId);\n\n  return todos.filter(todo => todo === getTodoByUserId(todo.userId));\n};\n\nexport const getUser = async(userId) => {\n  await wait(2000);\n  const response = await fetch(`${API_URL}/users/${userId}`);\n\n  return response.json();\n};\n\nconst wait = delay => new Promise((resolve) => {\n  setTimeout(resolve, delay);\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { getTodos, getUser } from './api';\n\nconst START_TODOS_LOADING = 'startTodosLoading';\nconst SET_TODOS = 'setTodos';\nconst HANDLE_TODOS_ERROR = 'handleTodosError';\nconst CLEAR_TODOS = 'clearTodos';\n\nconst START_USER_LOADING = 'startUserLoading';\nconst SET_USER = 'setUser';\nconst SELECT_USER = 'selectUser';\nconst HANDLE_USER_ERROR = 'handleUserError';\nconst CLEAR_USER = 'clearUser';\n\nexport const startTodosLoading = () => ({ type: START_TODOS_LOADING });\nexport const handleTodosError = () => ({ type: HANDLE_TODOS_ERROR });\nexport const setTodos = todos => ({ type: SET_TODOS, todos });\nexport const clearTodos = () => ({ type: CLEAR_TODOS });\n\nexport const startUserLoading = () => ({ type: START_USER_LOADING });\nexport const handleUserError = () => ({ type: HANDLE_USER_ERROR });\nexport const setUser = user => ({ type: SET_USER, user });\nexport const selectUser = userId => ({ type: SELECT_USER, userId });\nexport const clearUser = () => ({ type: CLEAR_USER });\n\nexport const loadTodos = () => (dispatch) => {\n  dispatch(startTodosLoading());\n\n  return getTodos()\n    .then(todos => dispatch(setTodos(todos)))\n    .catch(() => dispatch(handleTodosError()));\n};\n\nexport const showUser = userId => (dispatch) => {\n  dispatch(startUserLoading());\n  dispatch(selectUser(userId));\n\n  return getUser(userId)\n    .then(user => dispatch(setUser(user)))\n    .catch(() => dispatch(handleUserError()));\n};\n\nexport const getTodosFromState = state => state.todos;\nexport const getTodosAreLoading = state => state.todosAreLoading;\nexport const getTodosHaveError = state => state.todosHaveError;\n\nexport const getCurrentUser = state => state.currentUser;\nexport const getSelectedUserId = state => state.selectedUserId;\nexport const getUserIsLoading = state => state.userIsLoading;\nexport const getUserHasError = state => state.userHasError;\n\nconst initialState = {\n  todos: [],\n  todosAreLoading: false,\n  todosHaveError: false,\n\n  currentUser: {},\n  selectedUserId: null,\n  userIsLoading: false,\n  userHasError: false,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case START_TODOS_LOADING:\n      return {\n        ...state,\n        todosAreLoading: true,\n        todosHaveError: false,\n      };\n\n    case START_USER_LOADING:\n      return {\n        ...state,\n        userIsLoading: true,\n        userHasError: false,\n      };\n\n    case SET_TODOS:\n      return {\n        ...state,\n        todos: action.todos,\n        todosAreLoading: false,\n      };\n\n    case SET_USER:\n      return {\n        ...state,\n        currentUser: action.user,\n        userIsLoading: false,\n      };\n\n    case SELECT_USER:\n      return {\n        ...state,\n        selectedUserId: action.userId,\n      };\n\n    case HANDLE_TODOS_ERROR:\n      return {\n        ...state,\n        todosHaveError: true,\n        todosAreLoading: false,\n      };\n\n    case HANDLE_USER_ERROR:\n      return {\n        ...state,\n        userHasError: true,\n        userIsLoading: false,\n      };\n\n    case CLEAR_TODOS:\n      return {\n        ...state,\n        todos: [],\n      };\n\n    case CLEAR_USER:\n      return {\n        ...state,\n        currentUser: {},\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  reducer,\n  initialState,\n  applyMiddleware(thunk),\n);\n\nexport default store;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { showUser } from './store';\n\nconst TodoList = ({ todos, loadUser }) => (\n  <div className=\"TodoList\">\n    <strong>Todos:</strong>\n\n    <ul className=\"TodoList__list\">\n      {todos.map(todo => (\n        <li key={todo.id} className=\"TodoList__item\">\n          <label htmlFor={`todo-${todo.id}`}>\n            <input\n              type=\"checkbox\"\n              id={`todo-${todo.id}`}\n              checked={todo.completed}\n              readOnly\n            />\n            {todo.title}\n          </label>\n\n          <button type=\"button\" onClick={() => loadUser(todo.userId)}>\n            User\n            {todo.userId}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nconst getMethods = dispatch => ({\n  loadUser: userId => dispatch(showUser(userId)),\n});\n\nexport default connect(null, getMethods)(TodoList);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  loadUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n  loadTodos,\n  clearTodos,\n  getTodosFromState,\n  getTodosAreLoading,\n  getTodosHaveError,\n} from './store';\n\nimport TodoList from './TodoList';\n\nclass TodosTable extends React.Component {\n  getTodos = () => {\n    this.props.loadTodos();\n  }\n\n  render() {\n    const {\n      todos,\n      clear,\n      todosAreLoading,\n      hasError,\n    } = this.props;\n\n    if (todosAreLoading) {\n      return (\n        <section>\n          <p className=\"info\">Loading...</p>\n\n          <div className=\"content\">\n            <div className=\"loader\" />\n          </div>\n        </section>\n      );\n    }\n\n    if (hasError) {\n      return (\n        <section>\n          <p className=\"info\">\n            Failed loading todos\n            <button\n              type=\"button\"\n              onClick={this.getTodos}\n            >\n              Reload\n            </button>\n          </p>\n\n          <div className=\"content\">\n            <p>-</p>\n          </div>\n        </section>\n      );\n    }\n\n    if (todos.length < 1) {\n      return (\n        <section>\n          <p className=\"info\">\n            Todos are not loaded yet\n            <button\n              type=\"button\"\n              onClick={this.getTodos}\n            >\n              Load\n            </button>\n          </p>\n\n          <div className=\"content\">\n            <p>-</p>\n          </div>\n        </section>\n      );\n    }\n\n    return (\n      <section>\n        {todos.length > 1\n          ? (\n            <p className=\"info\">\n              6 todos are loaded\n              <button\n                type=\"button\"\n                onClick={clear}\n              >\n                Clear\n              </button>\n            </p>\n          ) : (\n            <p className=\"info\">\n              1 todo is loaded\n              <button\n                type=\"button\"\n                onClick={clear}\n              >\n                Clear\n              </button>\n            </p>\n          )\n        }\n\n        <div className=\"content\">\n          <TodoList todos={todos} />\n        </div>\n      </section>\n    );\n  }\n}\n\nconst getData = state => ({\n  todos: getTodosFromState(state),\n  todosAreLoading: getTodosAreLoading(state),\n  hasError: getTodosHaveError(state),\n});\n\nconst getMethods = dispatch => ({\n  loadTodos: () => dispatch(loadTodos()),\n  clear: () => dispatch(clearTodos()),\n});\n\nexport default connect(getData, getMethods)(TodosTable);\n\nTodosTable.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  loadTodos: PropTypes.func.isRequired,\n  clear: PropTypes.func.isRequired,\n  todosAreLoading: PropTypes.bool.isRequired,\n  hasError: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CurrentUser = ({ user }) => (\n  <div className=\"CurrentUser\">\n    <strong>Selected user:</strong>\n    <ul>\n      <li>{`#${user.id}`}</li>\n      <li>{user.name}</li>\n      <li>{user.email}</li>\n      <li>{user.phone}</li>\n    </ul>\n  </div>\n);\n\nexport default CurrentUser;\n\nCurrentUser.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n  loadTodos,\n  clearUser,\n  showUser,\n  getCurrentUser,\n  getUserIsLoading,\n  getUserHasError,\n  getSelectedUserId,\n} from './store';\n\nimport CurrentUser from './CurrentUser';\n\nclass UserTable extends React.Component {\n  getUser = (userId) => {\n    this.props.loadUser(userId);\n  }\n\n  render() {\n    const {\n      currentUser,\n      userId,\n      clear,\n      userIsLoading,\n      hasError,\n    } = this.props;\n\n    if (userIsLoading) {\n      return (\n        <section>\n          <p className=\"info\">Loading...</p>\n\n          <div className=\"content\">\n            <div className=\"loader\" />\n          </div>\n        </section>\n      );\n    }\n\n    if (hasError) {\n      return (\n        <section>\n          <p className=\"info\">\n            Failed loading user\n            <button\n              type=\"button\"\n              onClick={() => this.getUser(userId)}\n            >\n              Reload\n            </button>\n          </p>\n          <div className=\"content\">\n            <p>-</p>\n          </div>\n        </section>\n      );\n    }\n\n    if (Object.keys(currentUser).length === 0) {\n      return (\n        <section>\n          <p className=\"info\">User is not selected</p>\n\n          <div className=\"content\">\n            <p>-</p>\n          </div>\n        </section>\n      );\n    }\n\n    return (\n      <section>\n        <p className=\"info\">\n          {`User #${currentUser.id} is loaded`}\n          <button\n            type=\"button\"\n            onClick={clear}\n          >\n            Clear\n          </button>\n        </p>\n\n        <div className=\"content\">\n          <CurrentUser user={currentUser} />\n        </div>\n      </section>\n    );\n  }\n}\n\nconst getData = state => ({\n  currentUser: getCurrentUser(state),\n  userId: getSelectedUserId(state),\n  userIsLoading: getUserIsLoading(state),\n  hasError: getUserHasError(state),\n});\n\nconst getMethods = dispatch => ({\n  loadTodos: () => dispatch(loadTodos()),\n  clear: () => dispatch(clearUser()),\n  loadUser: userId => dispatch(showUser(userId)),\n});\n\nexport default connect(getData, getMethods)(UserTable);\n\nUserTable.propTypes = {\n  currentUser: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n  userId: PropTypes.number.isRequired,\n  loadUser: PropTypes.func.isRequired,\n  clear: PropTypes.func.isRequired,\n  userIsLoading: PropTypes.bool.isRequired,\n  hasError: PropTypes.bool.isRequired,\n};\n","import React from 'react';\n\nimport TodosTable from './TodosTable';\nimport UserTable from './UserTable';\n\nconst App = () => (\n  <main className=\"App\">\n    <TodosTable />\n    <UserTable />\n  </main>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './styles.css';\n\nimport App from './App';\nimport store from './store';\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}